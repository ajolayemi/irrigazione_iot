create table
  public.available_sectors (
    id bigint generated by default as identity,
    sector_id bigint not null,
    company_id bigint not null,
    constraint available_sectors_pkey primary key (id),
    constraint public_available_sectors_sector_id_fkey foreign key (sector_id) references sectors (id) on update restrict on delete cascade,
    constraint public_available_sectors_company_id_fkey foreign key (company_id) references companies (id) on update restrict on delete cascade
  ) tablespace pg_default;

alter table "public"."available_sectors" enable row level security;


-- drop SELECT policy if it already exists
drop policy if exists "Company members and generic superusers can read available sectors" on public.available_sectors;

-- create / recreate SELECT policy
-- the rules is basically that user is either a member of the current company or that they're a generic superuser
create policy "Company members and generic superusers can read available collectors" on public.available_sectors for
select
  to authenticated using (
    exists (
      select
        1
      from
        companies
      where
        companies.id = available_sectors.company_id
    )
  );
  

-- all other operations are performed or by postgres directly, which is done through trigger functions
-- or by service roles, which are not subjected to RLS policies